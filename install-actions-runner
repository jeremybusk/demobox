#!/usr/bin/env bash
# Installs github actions runner as a service on newer ubuntu hosts
set -ex

[[ -f /etc/os-release ]] && . /etc/os-release
if [[ "$NAME" == "Ubuntu" ]] && [[ $VERSION_ID > 20 ]]; then
  echo "I: Installing on $NAME $VERSION_ID."
else
  echo "E: Unsupported Operating System!"
  exit 1
fi


function user_add() {
  username=$1
  if ! [[ $(getent passwd $username)  ]]; then
    echo "Adding user $username"
    sudo adduser \
      --system \
      --shell /bin/bash \
      --gecos "Github actions runner user" \
      --group \
      --disabled-password \
      --home /home/actions-runner \
      $username

  fi
}


function sudo_allow_user() {
  username=$1
  sudo_file=/etc/sudoers.d/custom
  sudo_text="$username ALL = (ALL) NOPASSWD:ALL"
  # if ! [[ $(grep actions-runner $sudo_file) ]]; then
  if ! [[ $(grep "$sudo_text" $sudo_file) ]]; then
    echo "adduing $sudo_text to $sudo_file"
    echo $sudo_text | sudo tee -a $sudo_file
  fi
}


remove_service(){
  servicename=$1
  set +e
  systemctl stop $servicename
  systemctl disable $servicename
  rm -f /etc/systemd/system/$servicename
  rm -f /etc/systemd/system/$servicename
  rm -f /usr/lib/systemd/system/$servicename
  rm -f /usr/lib/systemd/system/$servicename
  userdel -r $servicename
  rm -rf /home/$servicename
  systemctl daemon-reload
  systemctl reset-failed
  systemctl list-unit-files | grep $servicename
  set -e
}

add_service() {
  username=$1
  if [[ $(systemctl status $username) ]]; then
    echo "E: $username service already exits"
    return 1
  fi
  homedir="/home/$username"
  cd $homedir
  sudo -u $username curl -O -L https://github.com/actions/runner/releases/download/v2.276.1/actions-runner-linux-x64-2.276.1.tar.gz
  sudo -u $username tar xzf ./actions-runner-linux-x64-2.276.1.tar.gz
  sudo -u $username ./config.sh --url https://github.com/jeremybusk/actions-lxd-docker-demo
  # chown -R $username $homedir

  sudo bash -c "cat <<EOT > /etc/systemd/system/$username.service
[Unit]
Description=Github Actions Systems Runner
After=$username.service
[Service]
User=actions-runner
WorkingDirectory=/home/actions-runner
ExecStart=/$homedir/run.sh
ExecReload=/bin/kill -SIGUSR1 \$MAINPID
[Install]
WantedBy=multi-user.target
EOT"
sudo systemctl enable $username.service
sudo systemctl start $username.service
systemctl is-active $username
systemctl is-enabled $username
}


main(){
  username=actions-runner
  remove_service $username
  user_add $username
  sudo_allow_user $username
  add_service $username
}


main "$@"
